{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\motas\\\\Desktop\\\\nextjs-course\\\\starting-project\\\\pages\\\\events\\\\[...slug].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Fragment, useEffect, useState } from 'react';\nimport { getFilteredEvents } from '../../helpers/api-util';\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\nimport EventList from '../../components/events/EventList';\nimport ResultsTitle from '../../components/events/ResultTitle';\nimport Button from '../../components/ui/Button';\nimport ErrorAlert from '../../components/ui/ErrorAlert';\n\nfunction FilteredEventsPage({\n  hasError,\n  events,\n  date\n}) {\n  const router = useRouter();\n  const filterData = router.query.slug;\n  const {\n    data,\n    error\n  } = useSWR('https://nextjs-project-80927-default-rtdb.firebaseio.com/events.json');\n  useEffect(() => {\n    if (data) {\n      const events = [];\n\n      for (const key in data) {\n        events.push(_objectSpread({\n          id: key\n        }, data[key]));\n      }\n\n      return events;\n    }\n  }, [data]);\n\n  if (!filterData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  const filteredYear = filterData[0];\n  const filteredMonth = filterData[1];\n  const numYear = +filteredYear;\n  const numMonth = +filteredMonth;\n\n  if (hasError) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Invalid filter. Please adjust your values!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"events\",\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n  const filteredEvents = events;\n\n  if (!filteredEvents || filteredEvents.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No events found for the chosen filter!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"/events\",\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n  const dateEvents = new Date(date.year, date.month - 1);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ResultsTitle, {\n      date: dateEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventList, {\n      items: filteredEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getServerSideProps(context) {\n  const {\n    params\n  } = context;\n  const filterData = params.slug;\n  const filteredYear = filterData[0];\n  const filteredMonth = filterData[1];\n  const numYear = +filteredYear;\n  const numMonth = +filteredMonth;\n\n  if (isNaN(numYear) || isNaN(numMonth) || numYear > 2030 || numYear < 2021 || numMonth < 1 || numMonth > 12) {\n    return {\n      props: {\n        hasError: true\n      } // notFound: true,\n      // redirect: {\n      //   destination: '/error'\n      // }\n\n    };\n  }\n\n  const filteredEvents = await getFilteredEvents({\n    year: numYear,\n    month: numMonth\n  });\n  return {\n    props: {\n      events: filteredEvents,\n      date: {\n        year: numYear,\n        month: numMonth\n      }\n    }\n  };\n}\nexport default FilteredEventsPage;","map":{"version":3,"sources":["C:/Users/motas/Desktop/nextjs-course/starting-project/pages/events/[...slug].js"],"names":["Fragment","useEffect","useState","getFilteredEvents","useRouter","useSWR","EventList","ResultsTitle","Button","ErrorAlert","FilteredEventsPage","hasError","events","date","router","filterData","query","slug","data","error","key","push","id","filteredYear","filteredMonth","numYear","numMonth","filteredEvents","length","dateEvents","Date","year","month","getServerSideProps","context","params","isNaN","props"],"mappings":"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","sourcesContent":["import { Fragment, useEffect, useState } from 'react';\r\nimport { getFilteredEvents } from '../../helpers/api-util';\r\nimport { useRouter } from 'next/router';\r\nimport useSWR from 'swr';\r\nimport EventList from '../../components/events/EventList';\r\nimport ResultsTitle from '../../components/events/ResultTitle';\r\nimport Button from '../../components/ui/Button';\r\nimport ErrorAlert from '../../components/ui/ErrorAlert';\r\n\r\nfunction FilteredEventsPage({ hasError, events, date }) {\r\n  const router = useRouter();\r\n  const filterData = router.query.slug;\r\n\r\n  const { data, error } = useSWR(\r\n    'https://nextjs-project-80927-default-rtdb.firebaseio.com/events.json'\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const events = [];\r\n      for (const key in data) {\r\n        events.push({\r\n          id: key,\r\n          ...data[key],\r\n        });\r\n      }\r\n\r\n      return events;\r\n    }\r\n  }, [data]);\r\n\r\n  if (!filterData) {\r\n    return <p className='center'>Loading...</p>;\r\n  }\r\n\r\n  const filteredYear = filterData[0];\r\n  const filteredMonth = filterData[1];\r\n\r\n  const numYear = +filteredYear;\r\n  const numMonth = +filteredMonth;\r\n\r\n  if (hasError) {\r\n    return (\r\n      <Fragment>\r\n        <ErrorAlert>\r\n          <p>Invalid filter. Please adjust your values!</p>\r\n        </ErrorAlert>\r\n        <div className='center'>\r\n          <Button link='events'>Show All Events</Button>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  const filteredEvents = events;\r\n\r\n  if (!filteredEvents || filteredEvents.length === 0) {\r\n    return (\r\n      <Fragment>\r\n        <ErrorAlert>\r\n          <p>No events found for the chosen filter!</p>\r\n        </ErrorAlert>\r\n        <div className='center'>\r\n          <Button link='/events'>Show All Events</Button>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  const dateEvents = new Date(date.year, date.month - 1);\r\n\r\n  return (\r\n    <Fragment>\r\n      <ResultsTitle date={dateEvents} />\r\n      <EventList items={filteredEvents} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  const { params } = context;\r\n  const filterData = params.slug;\r\n  const filteredYear = filterData[0];\r\n  const filteredMonth = filterData[1];\r\n\r\n  const numYear = +filteredYear;\r\n  const numMonth = +filteredMonth;\r\n\r\n  if (\r\n    isNaN(numYear) ||\r\n    isNaN(numMonth) ||\r\n    numYear > 2030 ||\r\n    numYear < 2021 ||\r\n    numMonth < 1 ||\r\n    numMonth > 12\r\n  ) {\r\n    return {\r\n      props: {\r\n        hasError: true,\r\n      },\r\n      // notFound: true,\r\n      // redirect: {\r\n      //   destination: '/error'\r\n      // }\r\n    };\r\n  }\r\n\r\n  const filteredEvents = await getFilteredEvents({\r\n    year: numYear,\r\n    month: numMonth,\r\n  });\r\n\r\n  return {\r\n    props: {\r\n      events: filteredEvents,\r\n      date: {\r\n        year: numYear,\r\n        month: numMonth,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default FilteredEventsPage;\r\n"]},"metadata":{},"sourceType":"module"}