{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\motas\\\\Desktop\\\\nextjs-course\\\\starting-project\\\\pages\\\\events\\\\[...slug].js\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport { getFilteredEvents } from '../../dummy-data';\nimport EventList from '../../components/events/EventList';\n\nfunction FilteredEventsPage() {\n  _s();\n\n  var router = useRouter();\n  var filterData = router.query.slug;\n\n  if (!filterData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  var filteredYear = filterData[0];\n  var filteredMonth = filterData[1];\n  var numYear = +filteredYear;\n  var numMonth = +filteredMonth;\n\n  if (isNaN(numYear) || isNaN(numMonth) || numYear > 2030 || numYear < 2021 || numMonth < 1 || numMonth > 12) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Invalid filter. Please adjust your values!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  var filteredEvents = getFilteredEvents({\n    year: numYear,\n    month: numMonth\n  });\n\n  if (!filteredEvents || filteredEvents.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No events found for the chosen filter!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(EventList, {\n      items: filteredEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FilteredEventsPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = FilteredEventsPage;\nexport default FilteredEventsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilteredEventsPage\");","map":{"version":3,"sources":["C:/Users/motas/Desktop/nextjs-course/starting-project/pages/events/[...slug].js"],"names":["useRouter","getFilteredEvents","EventList","FilteredEventsPage","router","filterData","query","slug","filteredYear","filteredMonth","numYear","numMonth","isNaN","filteredEvents","year","month","length"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,SAAP,MAAsB,mCAAtB;;AAEA,SAASC,kBAAT,GAA8B;AAAA;;AAC5B,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,MAAMK,UAAU,GAAGD,MAAM,CAACE,KAAP,CAAaC,IAAhC;;AAEA,MAAI,CAACF,UAAL,EAAiB;AACf,wBAAO;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAMG,YAAY,GAAGH,UAAU,CAAC,CAAD,CAA/B;AACA,MAAMI,aAAa,GAAGJ,UAAU,CAAC,CAAD,CAAhC;AAEA,MAAMK,OAAO,GAAG,CAACF,YAAjB;AACA,MAAMG,QAAQ,GAAG,CAACF,aAAlB;;AAEA,MACEG,KAAK,CAACF,OAAD,CAAL,IACAE,KAAK,CAACD,QAAD,CADL,IAEAD,OAAO,GAAG,IAFV,IAGAA,OAAO,GAAG,IAHV,IAIAC,QAAQ,GAAG,CAJX,IAKAA,QAAQ,GAAG,EANb,EAOE;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAME,cAAc,GAAGZ,iBAAiB,CAAC;AACvCa,IAAAA,IAAI,EAAEJ,OADiC;AAEvCK,IAAAA,KAAK,EAAEJ;AAFgC,GAAD,CAAxC;;AAKA,MAAI,CAACE,cAAD,IAAmBA,cAAc,CAACG,MAAf,KAA0B,CAAjD,EAAoD;AAClD,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEH;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAvCQV,kB;UACQH,S;;;KADRG,kB;AAyCT,eAAeA,kBAAf","sourcesContent":["import { useRouter } from 'next/router';\r\nimport { getFilteredEvents } from '../../dummy-data';\r\nimport EventList from '../../components/events/EventList';\r\n\r\nfunction FilteredEventsPage() {\r\n  const router = useRouter();\r\n  const filterData = router.query.slug;\r\n\r\n  if (!filterData) {\r\n    return <p className='center'>Loading...</p>;\r\n  }\r\n\r\n  const filteredYear = filterData[0];\r\n  const filteredMonth = filterData[1];\r\n\r\n  const numYear = +filteredYear;\r\n  const numMonth = +filteredMonth;\r\n\r\n  if (\r\n    isNaN(numYear) ||\r\n    isNaN(numMonth) ||\r\n    numYear > 2030 ||\r\n    numYear < 2021 ||\r\n    numMonth < 1 ||\r\n    numMonth > 12\r\n  ) {\r\n    return <p>Invalid filter. Please adjust your values!</p>;\r\n  }\r\n\r\n  const filteredEvents = getFilteredEvents({\r\n    year: numYear,\r\n    month: numMonth,\r\n  });\r\n\r\n  if (!filteredEvents || filteredEvents.length === 0) {\r\n    return <p>No events found for the chosen filter!</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <EventList items={filteredEvents} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilteredEventsPage;\r\n"]},"metadata":{},"sourceType":"module"}