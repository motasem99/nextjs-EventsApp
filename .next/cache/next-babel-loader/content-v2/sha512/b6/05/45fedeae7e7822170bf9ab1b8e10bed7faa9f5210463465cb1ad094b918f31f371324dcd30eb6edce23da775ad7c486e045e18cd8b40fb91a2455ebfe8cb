{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\motas\\\\Desktop\\\\nextjs-course\\\\starting-project\\\\pages\\\\events\\\\[...slug].js\";\nimport { Fragment } from 'react';\nimport EventList from '../../components/events/EventList';\nimport ResultsTitle from '../../components/events/ResultTitle';\nimport Button from '../../components/ui/Button';\nimport ErrorAlert from '../../components/ui/ErrorAlert';\n\nfunction FilteredEventsPage(_ref) {\n  var hasError = _ref.hasError,\n      events = _ref.events,\n      date = _ref.date;\n\n  if (hasError) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Invalid filter. Please adjust your values!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"events\",\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n  var filteredEvents = events;\n\n  if (!filteredEvents || filteredEvents.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No events found for the chosen filter!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"/events\",\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n  var dateEvents = new Date(date.year, date.month - 1);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ResultsTitle, {\n      date: dateEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventList, {\n      items: filteredEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_c = FilteredEventsPage;\nexport var __N_SSP = true;\nexport default FilteredEventsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilteredEventsPage\");","map":{"version":3,"sources":["C:/Users/motas/Desktop/nextjs-course/starting-project/pages/events/[...slug].js"],"names":["Fragment","EventList","ResultsTitle","Button","ErrorAlert","FilteredEventsPage","hasError","events","date","filteredEvents","length","dateEvents","Date","year","month"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;;AAEA,SAASC,kBAAT,OAAwD;AAAA,MAA1BC,QAA0B,QAA1BA,QAA0B;AAAA,MAAhBC,MAAgB,QAAhBA,MAAgB;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AACtD,MAAIF,QAAJ,EAAc;AACZ,wBACE,QAAC,QAAD;AAAA,8BACE,QAAC,UAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAED,MAAMG,cAAc,GAAGF,MAAvB;;AAEA,MAAI,CAACE,cAAD,IAAmBA,cAAc,CAACC,MAAf,KAA0B,CAAjD,EAAoD;AAClD,wBACE,QAAC,QAAD;AAAA,8BACE,QAAC,UAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAED,MAAMC,UAAU,GAAG,IAAIC,IAAJ,CAASJ,IAAI,CAACK,IAAd,EAAoBL,IAAI,CAACM,KAAL,GAAa,CAAjC,CAAnB;AAEA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEH;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KArCQJ,kB;;AAmFT,eAAeA,kBAAf","sourcesContent":["import { Fragment } from 'react';\r\nimport { getFilteredEvents } from '../../helpers/api-util';\r\nimport EventList from '../../components/events/EventList';\r\nimport ResultsTitle from '../../components/events/ResultTitle';\r\nimport Button from '../../components/ui/Button';\r\nimport ErrorAlert from '../../components/ui/ErrorAlert';\r\n\r\nfunction FilteredEventsPage({ hasError, events, date }) {\r\n  if (hasError) {\r\n    return (\r\n      <Fragment>\r\n        <ErrorAlert>\r\n          <p>Invalid filter. Please adjust your values!</p>\r\n        </ErrorAlert>\r\n        <div className='center'>\r\n          <Button link='events'>Show All Events</Button>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  const filteredEvents = events;\r\n\r\n  if (!filteredEvents || filteredEvents.length === 0) {\r\n    return (\r\n      <Fragment>\r\n        <ErrorAlert>\r\n          <p>No events found for the chosen filter!</p>\r\n        </ErrorAlert>\r\n        <div className='center'>\r\n          <Button link='/events'>Show All Events</Button>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  const dateEvents = new Date(date.year, date.month - 1);\r\n\r\n  return (\r\n    <Fragment>\r\n      <ResultsTitle date={dateEvents} />\r\n      <EventList items={filteredEvents} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  const { params } = context;\r\n  const filterData = params.slug;\r\n  const filteredYear = filterData[0];\r\n  const filteredMonth = filterData[1];\r\n\r\n  const numYear = +filteredYear;\r\n  const numMonth = +filteredMonth;\r\n\r\n  if (\r\n    isNaN(numYear) ||\r\n    isNaN(numMonth) ||\r\n    numYear > 2030 ||\r\n    numYear < 2021 ||\r\n    numMonth < 1 ||\r\n    numMonth > 12\r\n  ) {\r\n    return {\r\n      props: {\r\n        hasError: true,\r\n      },\r\n      // notFound: true,\r\n      // redirect: {\r\n      //   destination: '/error'\r\n      // }\r\n    };\r\n  }\r\n\r\n  const filteredEvents = await getFilteredEvents({\r\n    year: numYear,\r\n    month: numMonth,\r\n  });\r\n\r\n  return {\r\n    props: {\r\n      events: filteredEvents,\r\n      date: {\r\n        year: numYear,\r\n        month: numMonth,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default FilteredEventsPage;\r\n"]},"metadata":{},"sourceType":"module"}