{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"C:/Users/motas/Desktop/nextjs-course/starting-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\motas\\\\Desktop\\\\nextjs-course\\\\starting-project\\\\pages\\\\events\\\\[...slug].js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Fragment, useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport { getFilteredEvents } from '../../helpers/api-util';\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\nimport EventList from '../../components/events/EventList';\nimport ResultsTitle from '../../components/events/ResultTitle';\nimport Button from '../../components/ui/Button';\nimport ErrorAlert from '../../components/ui/ErrorAlert';\n\nfunction FilteredEventsPage(_ref) {\n  _s();\n\n  var hasError = _ref.hasError,\n      events = _ref.events,\n      date = _ref.date;\n\n  var _useState = useState(),\n      loadedEvents = _useState[0],\n      setLoadedEvents = _useState[1];\n\n  var router = useRouter();\n  var filterData = router.query.slug;\n\n  var _useSWR = useSWR('https://nextjs-project-80927-default-rtdb.firebaseio.com/events.json'),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  useEffect(function () {\n    if (data) {\n      var _events = [];\n\n      for (var key in data) {\n        _events.push(_objectSpread({\n          id: key\n        }, data[key]));\n      }\n\n      setLoadedEvents(_events);\n    }\n  }, [data]);\n\n  var pageHeadData = /*#__PURE__*/_jsxDEV(Head, {\n    children: [/*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Filtered Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      name: \"description\",\n      content: \"All events for \".concat(numMonth, \"/\").concat(numYear, \".\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n\n  if (!loadedEvents) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n\n  var filteredYear = filterData[0];\n  var filteredMonth = filterData[1];\n  var numYear = +filteredYear;\n  var numMonth = +filteredMonth;\n\n  if (isNaN(numYear) || isNaN(numMonth) || numYear > 2030 || numYear < 2021 || numMonth < 1 || numMonth > 12 || error) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Invalid filter. Please adjust your values!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"events\",\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n  var filteredEvents = loadedEvents.filter(function (event) {\n    var eventDate = new Date(event.date);\n    return eventDate.getFullYear() === numYear && eventDate.getMonth() === numMonth - 1;\n  });\n\n  if (!filteredEvents || filteredEvents.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No events found for the chosen filter!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"/events\",\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n  var dateEvents = new Date(numYear, numMonth - 1);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ResultsTitle, {\n      date: dateEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventList, {\n      items: filteredEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n} // export async function getServerSideProps(context) {\n//   const { params } = context;\n//   const filterData = params.slug;\n//   const filteredYear = filterData[0];\n//   const filteredMonth = filterData[1];\n//   const numYear = +filteredYear;\n//   const numMonth = +filteredMonth;\n//   if (\n//     isNaN(numYear) ||\n//     isNaN(numMonth) ||\n//     numYear > 2030 ||\n//     numYear < 2021 ||\n//     numMonth < 1 ||\n//     numMonth > 12\n//   ) {\n//     return {\n//       props: {\n//         hasError: true,\n//       },\n//       // notFound: true,\n//       // redirect: {\n//       //   destination: '/error'\n//       // }\n//     };\n//   }\n//   const filteredEvents = await getFilteredEvents({\n//     year: numYear,\n//     month: numMonth,\n//   });\n//   return {\n//     props: {\n//       events: filteredEvents,\n//       date: {\n//         year: numYear,\n//         month: numMonth,\n//       },\n//     },\n//   };\n// }\n\n\n_s(FilteredEventsPage, \"baGcR2zYNkTBGEMbpcQg6la1mJw=\", false, function () {\n  return [useRouter, useSWR];\n});\n\n_c = FilteredEventsPage;\nexport default FilteredEventsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilteredEventsPage\");","map":{"version":3,"sources":["C:/Users/motas/Desktop/nextjs-course/starting-project/pages/events/[...slug].js"],"names":["Fragment","useEffect","useState","Head","getFilteredEvents","useRouter","useSWR","EventList","ResultsTitle","Button","ErrorAlert","FilteredEventsPage","hasError","events","date","loadedEvents","setLoadedEvents","router","filterData","query","slug","data","error","key","push","id","pageHeadData","numMonth","numYear","filteredYear","filteredMonth","isNaN","filteredEvents","filter","event","eventDate","Date","getFullYear","getMonth","length","dateEvents"],"mappings":"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","sourcesContent":["import { Fragment, useEffect, useState } from 'react';\r\nimport Head from 'next/head';\r\nimport { getFilteredEvents } from '../../helpers/api-util';\r\nimport { useRouter } from 'next/router';\r\nimport useSWR from 'swr';\r\nimport EventList from '../../components/events/EventList';\r\nimport ResultsTitle from '../../components/events/ResultTitle';\r\nimport Button from '../../components/ui/Button';\r\nimport ErrorAlert from '../../components/ui/ErrorAlert';\r\n\r\nfunction FilteredEventsPage({ hasError, events, date }) {\r\n  const [loadedEvents, setLoadedEvents] = useState();\r\n  const router = useRouter();\r\n  const filterData = router.query.slug;\r\n\r\n  const { data, error } = useSWR(\r\n    'https://nextjs-project-80927-default-rtdb.firebaseio.com/events.json'\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const events = [];\r\n      for (const key in data) {\r\n        events.push({\r\n          id: key,\r\n          ...data[key],\r\n        });\r\n      }\r\n\r\n      setLoadedEvents(events);\r\n    }\r\n  }, [data]);\r\n\r\n  const pageHeadData = (\r\n    <Head>\r\n      <title>Filtered Events</title>\r\n      <meta\r\n        name='description'\r\n        content={`All events for ${numMonth}/${numYear}.`}\r\n      />\r\n    </Head>\r\n  );\r\n\r\n  if (!loadedEvents) {\r\n    return <p className='center'>Loading...</p>;\r\n  }\r\n\r\n  const filteredYear = filterData[0];\r\n  const filteredMonth = filterData[1];\r\n\r\n  const numYear = +filteredYear;\r\n  const numMonth = +filteredMonth;\r\n\r\n  if (\r\n    isNaN(numYear) ||\r\n    isNaN(numMonth) ||\r\n    numYear > 2030 ||\r\n    numYear < 2021 ||\r\n    numMonth < 1 ||\r\n    numMonth > 12 ||\r\n    error\r\n  ) {\r\n    return (\r\n      <Fragment>\r\n        <ErrorAlert>\r\n          <p>Invalid filter. Please adjust your values!</p>\r\n        </ErrorAlert>\r\n        <div className='center'>\r\n          <Button link='events'>Show All Events</Button>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  const filteredEvents = loadedEvents.filter((event) => {\r\n    const eventDate = new Date(event.date);\r\n    return (\r\n      eventDate.getFullYear() === numYear &&\r\n      eventDate.getMonth() === numMonth - 1\r\n    );\r\n  });\r\n\r\n  if (!filteredEvents || filteredEvents.length === 0) {\r\n    return (\r\n      <Fragment>\r\n        <ErrorAlert>\r\n          <p>No events found for the chosen filter!</p>\r\n        </ErrorAlert>\r\n        <div className='center'>\r\n          <Button link='/events'>Show All Events</Button>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  const dateEvents = new Date(numYear, numMonth - 1);\r\n\r\n  return (\r\n    <Fragment>\r\n      <ResultsTitle date={dateEvents} />\r\n      <EventList items={filteredEvents} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n// export async function getServerSideProps(context) {\r\n//   const { params } = context;\r\n//   const filterData = params.slug;\r\n//   const filteredYear = filterData[0];\r\n//   const filteredMonth = filterData[1];\r\n\r\n//   const numYear = +filteredYear;\r\n//   const numMonth = +filteredMonth;\r\n\r\n//   if (\r\n//     isNaN(numYear) ||\r\n//     isNaN(numMonth) ||\r\n//     numYear > 2030 ||\r\n//     numYear < 2021 ||\r\n//     numMonth < 1 ||\r\n//     numMonth > 12\r\n//   ) {\r\n//     return {\r\n//       props: {\r\n//         hasError: true,\r\n//       },\r\n//       // notFound: true,\r\n//       // redirect: {\r\n//       //   destination: '/error'\r\n//       // }\r\n//     };\r\n//   }\r\n\r\n//   const filteredEvents = await getFilteredEvents({\r\n//     year: numYear,\r\n//     month: numMonth,\r\n//   });\r\n\r\n//   return {\r\n//     props: {\r\n//       events: filteredEvents,\r\n//       date: {\r\n//         year: numYear,\r\n//         month: numMonth,\r\n//       },\r\n//     },\r\n//   };\r\n// }\r\n\r\nexport default FilteredEventsPage;\r\n"]},"metadata":{},"sourceType":"module"}